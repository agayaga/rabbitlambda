{"version":3,"sources":["/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/$_lazy_route_resource lazy","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.html","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.scss","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.ts","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.module.ts","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/services/data.service.ts","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/utils/logger/logger.service.ts","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/environments/environment.ts","/tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n<div *ngIf=\\\"!summary\\\" [class]=\\\"[possibleColors[colorPick],'qPannel'].join(' ')\\\">\\n    <div class=\\\"content\\\"  *ngFor=\\\"let question of questions; let i = index\\\" [hidden]=\\\"step !== i\\\">\\n        <div class=\\\"q\\\">\\n                {{ question.q }}\\n        </div>\\n        <div *ngIf=\\\"question.type == 'open'\\\">\\n            <input type=\\\"text\\\" matInput [(ngModel)]=\\\"question.answervalue\\\" placeholder=\\\"Enter...\\\">\\n        </div>\\n        <div *ngIf=\\\"question.type == 'single'\\\">\\n                <mat-radio-group [(ngModel)]=\\\"question.answervalue\\\">\\n                    <mat-radio-button *ngFor=\\\"let answer of question.answers\\\" [value]=\\\"answer\\\">\\n                        {{answer}}\\n                    </mat-radio-button>\\n                </mat-radio-group>\\n        </div>\\n    </div>\\n    <div class=\\\"btn-panel\\\">\\n        <button mat-raised-button color=\\\"basic\\\" (click)=\\\"goBack()\\\" [disabled]=\\\"step <= 0\\\"><~ Back</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goNext()\\\" [hidden]=\\\"step >= questions?.length -1\\\">Next ~></button>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"save()\\\" [hidden]=\\\"step < questions?.length\\\">Save</button>\\n    </div>\\n</div>\\n<div *ngIf=\\\"summary\\\" class=\\\"summaryPannel hotpink\\\">\\n    <div>{{summary}}</div>\\n</div>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 100%;\\n  width: 100%; }\\n  .container .qPannel {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-flow: column;\\n            flex-flow: column;\\n    width: 100%;\\n    text-align: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    padding-top: 30vh; }\\n  .container .qPannel .content {\\n      margin-bottom: 10vh; }\\n  .container .qPannel .q {\\n      font-size: 80px;\\n      margin-bottom: 40px; }\\n  .container .qPannel input[type=text] {\\n      background: none;\\n      width: 300px;\\n      height: 40px;\\n      font-size: 25px;\\n      text-align: center;\\n      border: solid #353232 1px; }\\n  .container .qPannel .mat-radio-button {\\n      margin-right: 20px; }\\n  .container .qPannel .btn-panel {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      min-width: 400px;\\n      -webkit-box-pack: justify;\\n          -ms-flex-pack: justify;\\n              justify-content: space-between; }\\n  .container .summaryPannel {\\n    width: 100%;\\n    height: 100vh;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    font-size: 65px;\\n    text-align: center;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex; }\\n  .container .summaryPannel div {\\n      max-width: 70%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './services/data.service';\nimport { LoggerService } from './utils/logger/logger.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public questions: Array<{}>;\n  public answers: Array<{}>;\n  public summary: String;\n  public step: number = 0;\n  public colorPick: number;\n  public possibleColors = [\n    'darksalmon',\n    'hotpink',\n    'lightskyblue',\n    'goldenrod',\n    'peachpuff',\n    'mediumspringgreen',\n    'cornflowerblue',\n    'blanchedalmond',\n    'lightslategrey'\n  ];\n  \n  constructor (private dataService:DataService, private logger:LoggerService){}\n  \n  ngOnInit(): void {\n    this.generate();\n    this.dataService.getQuestions().subscribe( data => {\n      this.questions =  data;\n     });\n  }\n\n  goNext() {\n    this.generate();\n    this.step++;\n  }\n\n  goBack() {\n    this.generate();\n    this.step--;\n  }\n\n  save() {\n    const savedObj =  this.questions.reduce((newArr:Array<{}>, item:any) => {\n      newArr.push({ id:item.id, answer: item.answervalue });\n      return newArr;\n    }, []);\n    this.dataService.saveForm(savedObj).subscribe( res => {\n      this.summary = `From total of ${ res.total_questions } questions you nailed ${ res.correct_answers}`;\n      this.logger.log(`GOt Respons: ${ JSON.stringify(res) }`);\n    });\n  }\n\n  generate() {\n    this.colorPick = Math.floor(Math.random() * this.possibleColors.length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { DataService } from './services/data.service';\nimport { LoggerService } from './utils/logger/logger.service';\n\nimport { AppComponent } from './app.component';\n\nimport { MatButtonModule, \n         MatRadioModule,\n         MatInputModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    MatButtonModule,\n    MatRadioModule\n  ],\n  providers: [DataService, LoggerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\n\nimport { LoggerService } from '../utils/logger/logger.service';\nconst GET_QUESTIONS_URL = 'https://heozkamkfc.execute-api.us-east-2.amazonaws.com/latest/db';\nconst SAVE_QUESTIONS_URL = 'https://heozkamkfc.execute-api.us-east-2.amazonaws.com/latest/submit';\n\n@Injectable()\nexport class DataService {\n\n  constructor (\n    private loggerService:LoggerService,\n    private http:Http\n  ){}\n\n  getQuestions(): Observable<any> {\n    this.loggerService.log(`fetching questions`);\n    return this.http.get(GET_QUESTIONS_URL)\n        .map(response => response.json())\n        .do((res)=>{\n            this.loggerService.log(`GOt Respons: ${ JSON.stringify(res) }`);\n          })\n        .catch((error:any) =>{\n          this.loggerService.log(`An Error occured: ${JSON.stringify(error)}`);\n          return Observable.throw(`An Error occured: ${JSON.stringify(error)}`)\n        });\n  }\n\n  saveForm(formData:any): Observable<any> {\n    let bodyString = JSON.stringify(formData);\n    const headers = new HttpHeaders({'Content-Type': 'application/json'});\n    this.loggerService.log(`form data #: ${JSON.stringify(formData) }`);\n    return this.http.post(SAVE_QUESTIONS_URL, bodyString )\n        .map(response => response.json())\n        .do((response)=>{\n              this.loggerService.log(`Got response #: ${ JSON.stringify(response) }`);\n          })\n        .catch((error:any) =>{\n          this.loggerService.log(`An Error occured: ${JSON.stringify(error)}`);\n          return Observable.throw(`An Error occured: ${JSON.stringify(error)}`)\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/services/data.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n  log(msg:any){\n    console.log(`Logger: ${typeof(msg) === 'object' ? JSON.stringify(msg) :  msg}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/app/utils/logger/logger.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /tmp/tmp.3wPwFDS0Zn/rabbitlambda/rabbit-web-v2/src/main.ts"],"sourceRoot":"webpack:///"}